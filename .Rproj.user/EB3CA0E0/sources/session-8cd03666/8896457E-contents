library(tidyverse)
library(shiny)
library(data.table)
library(shinydashboard)
library(shinyjs)
library(shinyBS)
library(shinycssloaders)
library(shinyWidgets)
library(DT)
library(sf)
library(dtplyr)
library(multidplyr)
library(hablar)
library(scales)
library(mapview)
library(leaflet)
library(tmap)
library(rgdal)
library(zip)

bzone<-st_read(".","Bzones") %>% st_transform(crs=4326)

boundary<-st_read(".","CCRPC_Boundary") %>% st_transform(crs=4326)

setwd("C:\\Users\\reid.haefer\\OneDrive - Resource Systems Group, Inc\\Documents\\projects\\CCRPC\\scenario_data")
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\Dvmt.Rda")
Dvmt<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\HhId.Rda")
HhId<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\HhSize.Rda")
HhSize<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\LifeCycle.Rda")
LifeCycle<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\Azone.Rda")
Azone<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\Income.Rda")
Income<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\Workers.Rda")
Workers<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\HouseType.Rda")
HouseType<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\LocType.Rda")
LocType<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\Vehicles.Rda")
Vehicles<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\Drivers.Rda")
Drivers<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\VehicleTrips.Rda")
VehicleTrips<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\TransitTrips.Rda")
TransitTrips<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\DailyGGE.Rda")
DailyGGE<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\OwnCost.Rda")
OwnCost<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\DailyCO2e.Rda")
DailyCO2e<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\Bzone.Rda")
Bzone<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\Age15to19.Rda")
Age15to19<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\Age0to14.Rda")
Age0to14<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\Age20to29.Rda")
Age20to29<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\Age30to54.Rda")
Age30to54<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\Age55to64.Rda")
Age55to64<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2015\\Household\\Age65Plus.Rda")
Age65Plus<-Dataset
scen1<-data.frame(HhId=HhId,
                 Bzone=Bzone,
                 Azone=Azone,
                 HhSize=HhSize,
                 Dvmt=Dvmt,
                 LifeCycle=LifeCycle,
                 Income=Income,
                 Workers=Workers,
                 HouseType=HouseType,
                 LocType=LocType,
                 Vehicles=Vehicles,
                 Drivers=Drivers,
                 VehicleTrips=VehicleTrips,
                 TransitTrips=TransitTrips,
                 DailyGGE=DailyGGE,
                 OwnCost=OwnCost,
                 DailyCO2e=DailyCO2e,
                 Age15to19=Age15to19,
                 Age0to14=Age0to14,
                 Age20to29=Age20to29,
                 Age30to54=Age30to54,
                 Age55to64=Age55to64,
                 Age65Plus=Age65Plus ) %>% mutate(scenario="Base - 2015")

#write.csv(scen1, "C:\\Users\\reid.haefer\\OneDrive - Resource Systems Group, Inc\\Documents\\projects\\CCRPC\\park_and_ride\\base_2015_ve.csv")

#
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\Dvmt.Rda")
Dvmt<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\HhId.Rda")
HhId<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\HhSize.Rda")
HhSize<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\LifeCycle.Rda")
LifeCycle<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\Azone.Rda")
Azone<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\Income.Rda")
Income<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\Workers.Rda")
Workers<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\HouseType.Rda")
HouseType<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\LocType.Rda")
LocType<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\Vehicles.Rda")
Vehicles<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\Drivers.Rda")
Drivers<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\VehicleTrips.Rda")
VehicleTrips<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\TransitTrips.Rda")
TransitTrips<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\DailyGGE.Rda")
DailyGGE<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\OwnCost.Rda")
OwnCost<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\DailyCO2e.Rda")
DailyCO2e<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\Bzone.Rda")
Bzone<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\Age15to19.Rda")
Age15to19<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\Age0to14.Rda")
Age0to14<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\Age20to29.Rda")
Age20to29<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\Age30to54.Rda")
Age30to54<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\Age55to64.Rda")
Age55to64<-Dataset
load("B1C1D1E1F1G1I1L1P1T1V1 - Base\\Datastore\\2050\\Household\\Age65Plus.Rda")
Age65Plus<-Dataset
scen2<-data.frame(HhId=HhId,
                  Bzone=Bzone,
                  Azone=Azone,
                  HhSize=HhSize,
                  Dvmt=Dvmt,
                  LifeCycle=LifeCycle,
                  Income=Income,
                  Workers=Workers,
                  HouseType=HouseType,
                  LocType=LocType,
                  Vehicles=Vehicles,
                  Drivers=Drivers,
                  VehicleTrips=VehicleTrips,
                  TransitTrips=TransitTrips,
                  DailyGGE=DailyGGE,
                  OwnCost=OwnCost,
                  DailyCO2e=DailyCO2e,
                  Age15to19=Age15to19,
                  Age0to14=Age0to14,
                  Age20to29=Age20to29,
                  Age30to54=Age30to54,
                  Age55to64=Age55to64,
                  Age65Plus=Age65Plus) %>% mutate(scenario="Base - 2050")

load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\Dvmt.Rda")
Dvmt<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\HhId.Rda")
HhId<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\HhSize.Rda")
HhSize<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\LifeCycle.Rda")
LifeCycle<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\Azone.Rda")
Azone<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\Income.Rda")
Income<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\Workers.Rda")
Workers<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\HouseType.Rda")
HouseType<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\LocType.Rda")
LocType<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\Vehicles.Rda")
Vehicles<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\Drivers.Rda")
Drivers<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\VehicleTrips.Rda")
VehicleTrips<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\TransitTrips.Rda")
TransitTrips<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\DailyGGE.Rda")
DailyGGE<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\OwnCost.Rda")
OwnCost<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\DailyCO2e.Rda")
DailyCO2e<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\Bzone.Rda")
Bzone<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\Age15to19.Rda")
Age15to19<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\Age0to14.Rda")
Age0to14<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\Age20to29.Rda")
Age20to29<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\Age30to54.Rda")
Age30to54<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\Age55to64.Rda")
Age55to64<-Dataset
load("B2C1D2E1F1G1I1L2P3T3V2 - Low DVMT\\Datastore\\2050\\Household\\Age65Plus.Rda")
Age65Plus<-Dataset
scen3<-data.frame(HhId=HhId,
                  Bzone=Bzone,
                  Azone=Azone,
                  HhSize=HhSize,
                  Dvmt=Dvmt,
                  LifeCycle=LifeCycle,
                  Income=Income,
                  Workers=Workers,
                  HouseType=HouseType,
                  LocType=LocType,
                  Vehicles=Vehicles,
                  Drivers=Drivers,
                  VehicleTrips=VehicleTrips,
                  TransitTrips=TransitTrips,
                  DailyGGE=DailyGGE,
                  OwnCost=OwnCost,
                  DailyCO2e=DailyCO2e,
                  Age15to19=Age15to19,
                  Age0to14=Age0to14,
                  Age20to29=Age20to29,
                  Age30to54=Age30to54,
                  Age55to64=Age55to64,
                  Age65Plus=Age65Plus) %>% mutate(scenario="Low VMT - 2050")

load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\Dvmt.Rda")
Dvmt<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\HhId.Rda")
HhId<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\HhSize.Rda")
HhSize<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\LifeCycle.Rda")
LifeCycle<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\Azone.Rda")
Azone<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\Income.Rda")
Income<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\Workers.Rda")
Workers<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\HouseType.Rda")
HouseType<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\LocType.Rda")
LocType<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\Vehicles.Rda")
Vehicles<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\Drivers.Rda")
Drivers<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\VehicleTrips.Rda")
VehicleTrips<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\TransitTrips.Rda")
TransitTrips<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\DailyGGE.Rda")
DailyGGE<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\OwnCost.Rda")
OwnCost<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\DailyCO2e.Rda")
DailyCO2e<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\Bzone.Rda")
Bzone<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\Age15to19.Rda")
Age15to19<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\Age0to14.Rda")
Age0to14<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\Age20to29.Rda")
Age20to29<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\Age30to54.Rda")
Age30to54<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\Age55to64.Rda")
Age55to64<-Dataset
load("B2C1D2E2F2G1I1L2P3T3V2 - Low GHG\\Datastore\\2050\\Household\\Age65Plus.Rda")
Age65Plus<-Dataset
scen4<-data.frame(HhId=HhId,
                  Bzone=Bzone,
                  Azone=Azone,
                  HhSize=HhSize,
                  Dvmt=Dvmt,
                  LifeCycle=LifeCycle,
                  Income=Income,
                  Workers=Workers,
                  HouseType=HouseType,
                  LocType=LocType,
                  Vehicles=Vehicles,
                  Drivers=Drivers,
                  VehicleTrips=VehicleTrips,
                  TransitTrips=TransitTrips,
                  DailyGGE=DailyGGE,
                  OwnCost=OwnCost,
                  DailyCO2e=DailyCO2e,
                  Age15to19=Age15to19,
                  Age0to14=Age0to14,
                  Age20to29=Age20to29,
                  Age30to54=Age30to54,
                  Age55to64=Age55to64,
                  Age65Plus=Age65Plus) %>% mutate(scenario="Low GHG - 2050")

load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\Dvmt.Rda")
Dvmt<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\HhId.Rda")
HhId<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\HhSize.Rda")
HhSize<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\LifeCycle.Rda")
LifeCycle<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\Azone.Rda")
Azone<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\Income.Rda")
Income<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\Workers.Rda")
Workers<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\HouseType.Rda")
HouseType<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\LocType.Rda")
LocType<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\Vehicles.Rda")
Vehicles<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\Drivers.Rda")
Drivers<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\VehicleTrips.Rda")
VehicleTrips<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\TransitTrips.Rda")
TransitTrips<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\DailyGGE.Rda")
DailyGGE<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\OwnCost.Rda")
OwnCost<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\DailyCO2e.Rda")
DailyCO2e<-Dataset
load("B2C1D2E2F2G1I1L2P2T3V2 - Reasonable\\Datastore\\2050\\Household\\Bzone.Rda")
Bzone<-Dataset
scen5<-data.frame(HhId=HhId,
                  Bzone=Bzone,
                  Azone=Azone,
                  HhSize=HhSize,
                  Dvmt=Dvmt,
                  LifeCycle=LifeCycle,
                  Income=Income,
                  Workers=Workers,
                  HouseType=HouseType,
                  LocType=LocType,
                  Vehicles=Vehicles,
                  Drivers=Drivers,
                  VehicleTrips=VehicleTrips,
                  TransitTrips=TransitTrips,
                  DailyGGE=DailyGGE,
                  OwnCost=OwnCost,
                  DailyCO2e=DailyCO2e) %>% mutate(scenario="Option 3 - 2050")


#https://nhts.ornl.gov/tables09/CodebookPage.aspx?id=960
lc <- data.frame(LifeCycle=c("01","02","03","04","09","10"),
                composition=c("one adult, no children","2+ adults, no children","one adult, youngest child 0-5","2+ adults, youngest child 0-5","one adult, retired, no children","2+ adults, retired, no children"))

data <- bind_rows(scen1,scen2, scen3, scen4) %>%
   rowwise() %>%
   mutate(income_cat=case_when(Income < 23794 ~ "Less than $24k",
                                                             between(Income, 23794,50289) ~ "$24k-$50k",
                                                             between(Income, 50289,86286) ~ "$50k-$86k",
                                                              between(Income, 86286,148656) ~ "$86k-$148k",
                                                             Income > 148656 ~ "More than $148k"),
                   adults_no=sum(c(Age20to29,Age30to54,Age55to64,Age65Plus)),
                   adult_group=case_when(adults_no==0 ~ "0 adults",
                                         adults_no==1 ~ "1 adult",
                                         adults_no==2 ~ "2 adults",
                                         adults_no>=3 ~ "3+ adults"),
                   children_no=sum(c(Age15to19,Age0to14)),
                   children_group=case_when(children_no==0 ~ "0 children",
                                            children_no %in% c(1,2) ~ "1-2 children",
                                            children_no>= 3 ~ "3+ children"),
                   composition=paste(adult_group, children_group, sep=", "))
 data <- data.table(data)
 
 data %>%
   group_by(scenario) %>%
   summarise(population=sum(HhSize), workers=sum(Workers))
 

write.csv(data,"C:\\Users\\reid.haefer\\OneDrive - Resource Systems Group, Inc\\Documents\\projects\\CCRPC\\park_and_ride\\hh_data.csv", row.names=F)



data<-fread("hh_data.csv")
  

data1 <- data %>% filter(scenario=="Base - 2050")
data2 <- data %>% filter(scenario=="Low VMT - 2050")
data3 <- data %>% filter(scenario=="Low GHG - 2050")
#data4 <- data %>% filter(scenario=="Option 3 - 2050")
#data5 <- data %>% filter(scenario=="Land Use 2")



base_map<-bzone %>%
  left_join(data1 %>%
              group_by(Bzone) %>%
              summarise(Dvmt=mean(Dvmt, na.rm=T),
                        VehicleTrips=mean(VehicleTrips, na.rm=T),
                        TransitTrips=mean(TransitTrips, na.rm=T),
                        OwnCost=mean(OwnCost, na.rm=T),
                        DailyCO2e=mean(DailyCO2e, na.rm=T)) %>% data.frame(), by=c("BzoneID"="Bzone")) %>%
  mutate(map="Base - 2050")

low_vmt_map<-bzone %>%
  left_join(data2 %>%
              group_by(Bzone) %>%
              summarise(Dvmt=mean(Dvmt, na.rm=T),
                        VehicleTrips=mean(VehicleTrips, na.rm=T),
                        TransitTrips=mean(TransitTrips, na.rm=T),
                        OwnCost=mean(OwnCost, na.rm=T),
                        DailyCO2e=mean(DailyCO2e, na.rm=T)) %>% data.frame(), by=c("BzoneID"="Bzone")) %>%
  mutate(map="Low VMT - 2050")

low_ghg_map<-bzone %>%
  left_join(data3 %>%
              group_by(Bzone) %>%
              summarise(Dvmt=mean(Dvmt, na.rm=T),
                        VehicleTrips=mean(VehicleTrips, na.rm=T),
                        TransitTrips=mean(TransitTrips, na.rm=T),
                        OwnCost=mean(OwnCost, na.rm=T),
                        DailyCO2e=mean(DailyCO2e, na.rm=T)) %>% data.frame(), by=c("BzoneID"="Bzone")) %>%
  mutate(map="Low GHG - 2050")

# option3_map<-bzone %>%
#   left_join(data4 %>%
#               group_by(Bzone) %>%
#               summarise(Dvmt=mean(Dvmt, na.rm=T),
#                         VehicleTrips=mean(VehicleTrips, na.rm=T),
#                         TransitTrips=mean(TransitTrips, na.rm=T),
#                         OwnCost=mean(OwnCost, na.rm=T),
#                         DailyCO2e=mean(DailyCO2e, na.rm=T)) %>% data.frame(), by=c("BzoneID"="Bzone")) %>%
#   mutate(map="Option 3 - 2050")

# lu2_map<-bzone %>%
#   left_join(data5 %>%
#               group_by(Bzone) %>%
#               summarise(Dvmt=mean(Dvmt, na.rm=T),
#                         VehicleTrips=mean(VehicleTrips, na.rm=T),
#                         TransitTrips=mean(TransitTrips, na.rm=T),
#                         OwnCost=mean(OwnCost, na.rm=T),
#                         DailyCO2e=mean(DailyCO2e, na.rm=T)) %>% data.frame(), by=c("BzoneID"="Bzone")) %>%
#   mutate(map="land_use_2_scenario")

bins_vmt <- c(0,quantile(base_map$Dvmt, na.rm=T, names=F)[c(2,3,4)],80)
pal1 <- colorBin("YlOrRd", domain = base_map$Dvmt, bins = bins_vmt)
pal2 <- colorBin("YlOrRd", domain = low_vmt_map$Dvmt, bins = bins_vmt)
pal3 <- colorBin("YlOrRd", domain = low_ghg_map$Dvmt, bins = bins_vmt)
#pal4 <- colorBin("YlOrRd", domain = option3_map$Dvmt, bins = bins_vmt)
# pal5 <- colorBin("YlOrRd", domain = lu2_map$Dvmt, bins = bins_vmt)

bins_veh <- c(0,quantile(base_map$VehicleTrips, na.rm=T, names=F)[c(2,3,4)],10)
pal6 <- colorBin("YlOrRd", domain = base_map$VehicleTrips, bins = bins_veh )
pal7 <- colorBin("YlOrRd", domain = low_vmt_map$VehicleTrips, bins = bins_veh )
pal8 <- colorBin("YlOrRd", domain = low_ghg_map$VehicleTrips, bins = bins_veh )
#pal9 <- colorBin("YlOrRd", domain = option3_map$VehicleTrips, bins = bins_veh )
# pal10 <- colorBin("YlOrRd", domain = lu2_map$VehicleTrips, bins = bins_veh )

bins_tran <- c(0,quantile(base_map$TransitTrips, na.rm=T, names=F)[c(2,3,4)],4)
pal11 <- colorBin("YlOrRd", domain = base_map$TransitTrips, bins = bins_tran )
pal12 <- colorBin("YlOrRd", domain = low_vmt_map$TransitTrips, bins = bins_tran )
pal13 <- colorBin("YlOrRd", domain = low_ghg_map$TransitTrips, bins = bins_tran )
#pal14 <- colorBin("YlOrRd", domain = option3_map$TransitTrips, bins = bins_tran )
# pal15 <- colorBin("YlOrRd", domain = lu2_map$TransitTrips, bins = bins_tran )

bins_cost <- c(0,quantile(base_map$OwnCost, na.rm=T, names=F)[c(2,3,4)],12000)
pal16 <- colorBin("YlOrRd", domain = base_map$OwnCost, bins = bins_cost )
pal17 <- colorBin("YlOrRd", domain = low_vmt_map$OwnCost, bins = bins_cost )
pal18 <- colorBin("YlOrRd", domain = low_ghg_map$OwnCost, bins = bins_cost )
#pal19 <- colorBin("YlOrRd", domain = option3_map$OwnCost, bins = bins_cost )
# pal20 <- colorBin("YlOrRd", domain = lu2_map$OwnCost, bins = bins_cost )

bins_co2 <- c(0,quantile(base_map$DailyCO2e, na.rm=T, names=F)[c(2,3,4)],5)
pal21 <- colorBin("YlOrRd", domain = base_map$DailyCO2e, bins = bins_co2 )
pal22 <- colorBin("YlOrRd", domain = low_vmt_map$DailyCO2e, bins = bins_co2 )
pal23 <- colorBin("YlOrRd", domain = low_ghg_map$DailyCO2e, bins = bins_co2 )
#pal24 <- colorBin("YlOrRd", domain = option3_map$DailyCO2e, bins = bins_co2 )
# pal25 <- colorBin("YlOrRd", domain = lu2_map$DailyCO2e, bins = bins_co2 )

linebreaks <- function(n){HTML(strrep(br(), n))}

############ dashboard ##################

ui <- dashboardPage(skin="black", 
                    dashboardHeader(title="Chittenden County RPC Vision Eval Household Scenario Explorer",titleWidth = 750),
                    dashboardSidebar(),
                    dashboardBody(
                      fluidRow(
                      tabBox(width=12,
                        tabPanel("Introduction",
                                 fluidRow(box(width=6,
                                              h3(tags$b("Purpose")),
                                              h4("This tool was developed by RSG for the Chittenden County Regional Planning Commission as part of the Interstate 89 corridor study. The purpose of the tool is to summarise and visualize the disaggregated household output data from VE-RSPM modeled scenarios."),
                                              linebreaks(1),
                                              h3(tags$b("Tool Usage")),
                                              h4('The summary data tab summarizes individual household records from the scenarios and allows the user to interactively select different household characteristics (personas) and observe key summary metrics.'),
                                              linebreaks(1),
                                              h4("The map tab displays the same household-level data but averaged and displayed geographically at the TAZ level. This allows the users to observe average spatial differences between the various model scenarios. If desired, the user can download a shapefile of these map layers for their own analysis or display."),
                                              linebreaks(1),
                                              h4("* The tool is drawing from a large underlying dataset and takes some time to load. At times it may take 15-20 seconds to display selected data."),
                                              linebreaks(2),
                                              img(src='RSG Logo.jpg',  height = 80, width = 250)
                       ))),
                        tabPanel("Summary Data",
                      fluidRow(box(title="Select Household Characteristics",
                                   column(2,pickerInput("input_azone","County", choices=unique(data$Azone),selected=unique(data$Azone), options = list(`actions-box` = TRUE),multiple = T)), 
                                   column(2,pickerInput("input_hh","Household Size", choices=sort(unique(data$HhSize)), selected=unique(data$HhSize), options = list(`actions-box` = TRUE),multiple = T)), 
                                   column(2,pickerInput("input_lifecycle","Household Composition", choices=sort(unique(data$composition)), selected=unique(data$composition), options = list(`actions-box` = TRUE),multiple = T)),
                                   column(2,pickerInput("input_income","Household Income", choices=c("Less than $24k","$24k-$50k","$50k-$86k","$86k-$148k","More than $148k"), selected=unique(data$income_cat), options = list(`actions-box` = TRUE),multiple = T)), 
                                   column(2,pickerInput("input_workers","# of Workers", choices=sort(unique(data$Workers)), selected=unique(data$Workers), options = list(`actions-box` = TRUE),multiple = T)), 
                                   column(2,pickerInput("input_house_type","House Type", choices=unique(data$HouseType), selected=unique(data$HouseType), options = list(`actions-box` = TRUE),multiple = T)),
                                   column(2,pickerInput("input_loc_type","Location Type", choices=unique(data$LocType),selected=unique(data$LocType) ,options = list(`actions-box` = TRUE),multiple = T)),
                                   column(2,pickerInput("input_vehicles","# of Vehicles", choices=sort(unique(data$Vehicles)), selected=unique(data$Vehicles), options = list(`actions-box` = TRUE),multiple = T)),
                                   column(2,pickerInput("input_drivers","# of Drivers", choices=sort(unique(data$Drivers)), selected=unique(data$Drivers), options = list(`actions-box` = TRUE),multiple = T)),
                                   width=12)
                      ),
                      fluidRow(box(title="Base - 2050", status="primary", solidHeader = F,
                                   column(2,valueBoxOutput("dvmt_1", width=12) %>% withSpinner()),  
                                   column(2,valueBoxOutput("veh_trips_1", width=12)),
                                   column(2,valueBoxOutput("tran_trips_1", width=12)),
                                  # column(2,valueBoxOutput("gge_1", width=12)),
                                   column(2,valueBoxOutput("cost_1", width=12)),
                                   column(2,valueBoxOutput("co2_1", width=12)),
                                   width=12)
                      ),
                      fluidRow(box(title="Low DVMT - 2050",status="success", solidHeader = F,
                                   column(2,valueBoxOutput("dvmt_2", width=12)),  
                                   column(2,valueBoxOutput("veh_trips_2", width=12)),
                                   column(2,valueBoxOutput("tran_trips_2", width=12)),
                                  # column(2,valueBoxOutput("gge_2", width=12)),
                                   column(2,valueBoxOutput("cost_2", width=12)),
                                   column(2,valueBoxOutput("co2_2", width=12)),
                                   width=12)
                      ),
                      fluidRow(box(title="Low GHG - 2050", status="primary", solidHeader = F,
                                   column(2,valueBoxOutput("dvmt_3", width=12)),  
                                   column(2,valueBoxOutput("veh_trips_3", width=12)),
                                   column(2,valueBoxOutput("tran_trips_3", width=12)),
                                   #column(2,valueBoxOutput("gge_3", width=12)),
                                   column(2,valueBoxOutput("cost_3", width=12)),
                                   column(2,valueBoxOutput("co2_3", width=12)),
                                   width=12)
                      ),
                      # fluidRow(box(title="Option 3 - 2050", status="success",solidHeader = F,
                      #              column(2,valueBoxOutput("dvmt_4", width=12)),  
                      #              column(2,valueBoxOutput("veh_trips_4", width=12)),
                      #              column(2,valueBoxOutput("tran_trips_4", width=12)),
                      #             #column(2,valueBoxOutput("gge_4", width=12)),
                      #              column(2,valueBoxOutput("cost_4", width=12)),
                      #              column(2,valueBoxOutput("co2_4", width=12)),
                      #              width=12)
                      # ),
                      # fluidRow(box(title="Land Use 2", status="primary",solidHeader = F,
                      #              column(2,valueBoxOutput("dvmt_5", width=12)),  
                      #              column(2,valueBoxOutput("veh_trips_5", width=12)),
                      #              column(2,valueBoxOutput("tran_trips_5", width=12)),
                      #             # column(2,valueBoxOutput("gge_5", width=12)),
                      #              column(2,valueBoxOutput("cost_5", width=12)),
                      #              column(2,valueBoxOutput("co2_5", width=12)),
                      #              width=12)
                      # )
                    ),
                    tabPanel("TAZ Map Data",
                             tabBox(width=12, height="900px",
                             tabPanel("Base - 2050",
                                      downloadButton('download_shp1', 'Download Map Shapefile'),
                                      leafletOutput("map1", height=900)%>% withSpinner()),
                             tabPanel("Low DVMT - 2050",
                                      downloadButton('download_shp2', 'Download Map Shapefile'),
                                      leafletOutput("map2", height=900) %>% withSpinner()),
                             tabPanel("Low GHG - 2050",
                                      downloadButton('download_shp3', 'Download Map Shapefile'),
                                      leafletOutput("map3", height=900) %>% withSpinner()),
                             # tabPanel("Option 3 - 2050",
                             #          downloadButton('download_shp4', 'Download Map Shapefile'),
                             #          leafletOutput("map4", height=900) %>% withSpinner()),
                             # tabPanel("Land Use 2",
                             #          downloadButton('download_shp5', 'Download Map Shapefile'),
                             #          leafletOutput("map5", height=900) %>% withSpinner())
                             )
                    )
                      )
                    )
                    ),
                    tags$head(tags$style(HTML("
    .skin-black .main-sidebar {
        background-color:  black;
                            }")))
)
server <- function(input, output, session) { 
output$map1<-renderLeaflet({
  leaflet() %>% addTiles(group="Toner Lite") %>% 
    addPolygons(data=base_map,  stroke = T, weight=1,color="white",opacity=.1,fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal1(Dvmt) , label = round(base_map$Dvmt,0), group="DVMT",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="DVMT",
              pal = pal1,
              values= c("", "","","",""),
              title= "Daily Average Household VMT",
              opacity = 1) %>%
    addPolygons(data=base_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal6(VehicleTrips) , label = round(base_map$VehicleTrips,1), group="Vehicle Trips",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="Vehicle Trips",
              pal = pal6,
              values= c("", "","","",""),
              title= "Daily Average Household Vehicle Trips",
              opacity = 1) %>%
    addPolygons(data=base_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal11(TransitTrips), label = round(base_map$TransitTrips,1), group="Transit Trips",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="Transit Trips",
              pal = pal11,
              values= c("", "","","",""),
              title= "Daily Average Household Transit Trips",
              opacity = 1) %>%
    addPolygons(data=base_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal16(OwnCost), label = dollar(base_map$OwnCost,1), group="Vehicle Costs",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="Vehicle Costs",
              pal = pal16,
              values= base_map$OwnCost,
              labels= dollar(base_map$OwnCost,1),
              title= "Average Annual Household Vehicle Costs",
              opacity = 1) %>%
    addPolygons(data=base_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal21(DailyCO2e), label = round(base_map$DailyCO2e,1), group="CO2e",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="CO2e",
              pal = pal21,
              values= c("", "","","",""),
              title= "Average Daily Household CO2 emissions",
              opacity = 1) %>%
    addLayersControl(
      overlayGroups = c("DVMT", "Vehicle Trips","Transit Trips","Vehicle Costs","CO2e"),
      options = layersControlOptions(collapsed = FALSE)
    ) %>% hideGroup(c("Vehicle Trips","Transit Trips","Vehicle Costs","CO2e"))
})  
output$map2<-renderLeaflet({
  leaflet() %>% addTiles(group="Toner Lite") %>% 
    addPolygons(data=low_vmt_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5,  fillColor =~pal2(Dvmt), label = round(low_vmt_map$Dvmt,0), group="DVMT",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="DVMT",
              pal = pal2,
              values= c("", "","","",""),
              title= "Daily Average Household VMT",
              opacity = 1) %>% 
    addPolygons(data=low_vmt_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal7(VehicleTrips), label = round(low_vmt_map$VehicleTrips,1), group="Vehicle Trips",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="Vehicle Trips",
              pal = pal7,
              values= c("", "","","",""),
              title= "Daily Average Household Vehicle Trips",
              opacity = 1) %>%
    addPolygons(data=low_vmt_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal12(TransitTrips), label = round(low_vmt_map$TransitTrips,1), group="Transit Trips",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="Transit Trips",
              pal = pal12,
              values= c("", "","","",""),
              title= "Daily Average Household Transit Trips",
              opacity = 1) %>%
    addPolygons(data=low_vmt_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal17(OwnCost), label = dollar(low_vmt_map$OwnCost,1), group="Vehicle Costs",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE))  %>%
    addLegend("topright", group="Vehicle Costs",
              pal = pal17,
              values= dollar(low_vmt_map$OwnCost),
              title= "Average Annual Household Vehicle Costs",
              opacity = 1)%>%
    addPolygons(data=low_vmt_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal22(DailyCO2e), label = round(low_vmt_map$DailyCO2e,1), group="CO2e",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE))%>%
    addLegend("topright", group="CO2e",
              pal = pal22,
              values= c("", "","","",""),
              title= "Average Daily Household CO2 emissions",
              opacity = 1) %>%
    addLayersControl(
      overlayGroups = c("DVMT", "Vehicle Trips","Transit Trips","Vehicle Costs","CO2e"),
      options = layersControlOptions(collapsed = FALSE)
    ) %>% hideGroup(c("Vehicle Trips","Transit Trips","Vehicle Costs","CO2e"))
}) 
output$map3<-renderLeaflet({
  leaflet() %>% addTiles(group="Toner Lite") %>% 
    addPolygons(data=low_ghg_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal3(Dvmt), label = round(low_ghg_map$Dvmt,0), group="DVMT",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE))%>%
    addLegend("topright", group="DVMT",
              pal = pal3,
              values= c("", "","","",""),
              title= "Daily Average Household VMT",
              opacity = 1) %>% 
    addPolygons(data=low_ghg_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal8(VehicleTrips), label = round(low_ghg_map$VehicleTrips,1), group="Vehicle Trips",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="Vehicle Trips",
              pal = pal8,
              values= c("", "","","",""),
              title= "Daily Average Household Vehicle Trips",
              opacity = 1) %>%
    addPolygons(data=low_ghg_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal13(TransitTrips), label = round(low_ghg_map$TransitTrips,1), group="Transit Trips",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="Transit Trips",
              pal = pal13,
              values= c("", "","","",""),
              title= "Daily Average Household Transit Trips",
              opacity = 1) %>%
    addPolygons(data=low_ghg_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal18(OwnCost), label = dollar(low_ghg_map$OwnCost,1), group="Vehicle Costs",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE))%>%
    addLegend("topright", group="Vehicle Costs",
              pal = pal18,
              values= dollar(low_ghg_map$OwnCost),
              title= "Average Annual Household Vehicle Costs",
              opacity = 1) %>%
    addPolygons(data=low_ghg_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal23(DailyCO2e), label = round(low_ghg_map$DailyCO2e,1), group="CO2e",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE))%>%
    addLegend("topright", group="CO2e",
              pal = pal23,
              values= c("", "","","",""),
              title= "Average Daily Household CO2 emissions",
              opacity = 1) %>%
    addLayersControl(
      overlayGroups = c("DVMT", "Vehicle Trips","Transit Trips","Vehicle Costs","CO2e"),
      options = layersControlOptions(collapsed = FALSE)
    ) %>% hideGroup(c("Vehicle Trips","Transit Trips","Vehicle Costs","CO2e"))
}) 
output$map4<-renderLeaflet({
  leaflet() %>% addTiles(group="Toner Lite") %>% 
    addPolygons(data=option3_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal4(Dvmt), label = round(option3_map$Dvmt,0), group="DVMT",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE))%>%
    addLegend("topright", group="DVMT",
              pal = pal4,
              values= c("", "","","",""),
              title= "Daily Average Household VMT",
              opacity = 1) %>% 
    addPolygons(data=option3_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal9(VehicleTrips), label = round(option3_map$VehicleTrips,1), group="Vehicle Trips",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="Vehicle Trips",
              pal = pal9,
              values= c("", "","","",""),
              title= "Daily Average Household Vehicle Trips",
              opacity = 1) %>%
    addPolygons(data=option3_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal14(TransitTrips), label = round(option3_map$TransitTrips,1), group="Transit Trips",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="Transit Trips",
              pal = pal14,
              values= c("", "","","",""),
              title= "Daily Average Household Transit Trips",
              opacity = 1) %>%
    addPolygons(data=option3_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal19(OwnCost), label = dollar(option3_map$OwnCost,1), group="Vehicle Costs",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE))%>%
    addLegend("topright", group="Vehicle Costs",
              pal = pal19,
              values= dollar(option3_map$OwnCost),
              title= "Average Annual Household Vehicle Costs",
              opacity = 1) %>%
    addPolygons(data=option3_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal24(DailyCO2e), label = round(option3_map$DailyCO2e,1), group="CO2e",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE))%>%
    addLegend("topright", group="CO2e",
              pal = pal24,
              values= c("", "","","",""),
              title= "Average Daily Household CO2 emissions",
              opacity = 1) %>%
    addLayersControl(
      overlayGroups = c("DVMT", "Vehicle Trips","Transit Trips","Vehicle Costs","CO2e"),
      options = layersControlOptions(collapsed = FALSE)
    ) %>% hideGroup(c("Vehicle Trips","Transit Trips","Vehicle Costs","CO2e"))
})
output$map5<-renderLeaflet({
  leaflet() %>% addTiles(group="Toner Lite") %>% 
    addPolygons(data=lu2_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal5(Dvmt), label = round(lu2_map$Dvmt,0), group="DVMT",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE))%>%
    addLegend("topright", group="DVMT",
              pal = pal5,
              values= c("", "","","",""),
              title= "Daily Average Household VMT",
              opacity = 1) %>% 
    addPolygons(data=lu2_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal10(VehicleTrips), label = round(lu2_map$VehicleTrips,1), group="Vehicle Trips",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="Vehicle Trips",
              pal = pal10,
              values= c("", "","","",""),
              title= "Daily Average Household Vehicle Trips",
              opacity = 1) %>%
    addPolygons(data=lu2_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal14(TransitTrips), label = round(lu2_map$TransitTrips,1), group="Transit Trips",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE)) %>%
    addLegend("topright", group="Transit Trips",
              pal = pal14,
              values= c("", "","","",""),
              title= "Daily Average Household Transit Trips",
              opacity = 1) %>%
    addPolygons(data=lu2_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal20(OwnCost), label = dollar(lu2_map$OwnCost,1), group="Vehicle Costs",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE))%>%
    addLegend("topright", group="Vehicle Costs",
              pal = pal20,
              values= dollar(lu2_map$OwnCost),
              title= "Average Annual Household Vehicle Costs",
              opacity = 1) %>%
    addPolygons(data=lu2_map,  stroke=T, weight=1,color="white",opacity=.1, fillOpacity = 0.8, smoothFactor = 0.5, fillColor =~pal25(DailyCO2e), label = round(lu2_map$DailyCO2e,1), group="CO2e",highlight = highlightOptions(
      weight = 1,
      fillOpacity = 0.5,
      color = "black",
      opacity = 1.0,
      bringToFront = TRUE,
      sendToBack = TRUE))%>%
    addLegend("topright", group="CO2e",
              pal = pal25,
              values= c("", "","","",""),
              title= "Average Daily Household CO2 emissions",
              opacity = 1) %>%
    addLayersControl(
      overlayGroups = c("DVMT", "Vehicle Trips","Transit Trips","Vehicle Costs","CO2e"),
      options = layersControlOptions(collapsed = FALSE)
    ) %>% hideGroup(c("Vehicle Trips","Transit Trips","Vehicle Costs","CO2e"))
})
  # scenario 1
base_values <- reactive({
  data1 %>% filter(#scenario%in%"Scenario 1",
    Azone %in%input$input_azone & 
      HhSize %in%input$input_hh & 
      composition %in%input$input_lifecycle & 
      income_cat %in%input$input_income & 
      Workers %in%input$input_workers & 
      HouseType %in%input$input_house_type &
      LocType %in%input$input_loc_type &
      Vehicles %in%input$input_vehicles&
      Drivers %in%input$input_drivers) %>% summarise(Dvmt=round(mean(Dvmt, na.rm=T),0),
                                                    # DailyGGE=round(mean(DailyGGE, na.rm=T),2),
                                                     OwnCost=round(mean(OwnCost, na.rm=T),0),
                                                     DailyCO2e=round(mean(DailyCO2e, na.rm=T),2),
                                                     VehicleTrips=round(mean(VehicleTrips, na.rm=T),1),
                                                     TransitTrips=round(mean(TransitTrips, na.rm=T),1))
})
  output$dvmt_1 <-renderValueBox({
    valueBox(base_values() %>% pull(Dvmt), "Daily VMT", width=12, color="navy")
  })
  # output$gge_1 <-renderValueBox({
  #   valueBox(base_values() %>% pull(DailyGGE), "Daily Gasoline (gal)", width=12, color="navy")
  # })
  output$cost_1 <-renderValueBox({
    valueBox(dollar(base_values() %>% pull(OwnCost)), "Annual Vehicle Cost", width=12, color="navy")
  })
  output$co2_1 <-renderValueBox({
    valueBox(base_values() %>% pull(DailyCO2e), "Daily CO2 (kg/Day)", width=12, color="navy")
  })
  output$veh_trips_1 <-renderValueBox({
    valueBox(base_values() %>% pull(VehicleTrips), "Daily Vehicle Trips", width=12, color="navy")
  })
  output$tran_trips_1 <-renderValueBox({
    valueBox(base_values() %>% pull(TransitTrips), "Daily Transit Trips", width=12, color="navy")
  })
  values2 <- reactive({
    data2 %>% filter(#scenario%in%"Scenario 1",
      Azone %in%input$input_azone & 
        HhSize %in%input$input_hh & 
        composition %in%input$input_lifecycle & 
        income_cat %in%input$input_income & 
        Workers %in%input$input_workers & 
        HouseType %in%input$input_house_type &
        LocType %in%input$input_loc_type &
        Vehicles %in%input$input_vehicles&
        Drivers %in%input$input_drivers) %>% summarise(Dvmt=round(mean(Dvmt, na.rm=T),0),
                                                      # DailyGGE=round(mean(DailyGGE, na.rm=T),2),
                                                       OwnCost=round(mean(OwnCost, na.rm=T),0),
                                                       DailyCO2e=round(mean(DailyCO2e, na.rm=T),2),
                                                       VehicleTrips=round(mean(VehicleTrips, na.rm=T),1),
                                                       TransitTrips=round(mean(TransitTrips, na.rm=T),1))
  })
  output$dvmt_2 <-renderValueBox({
    valueBox(percent((values2() %>% pull(Dvmt)-base_values() %>% pull(Dvmt))/base_values() %>% pull(Dvmt)), "Daily VMT", width=12, color="navy")
  })
  # output$gge_2 <-renderValueBox({
  #   valueBox(percent((values2() %>% pull(DailyGGE)-base_values() %>% pull(DailyGGE))/base_values() %>% pull(DailyGGE)), "Daily Gasoline (gal)", width=12, color="navy")
  # })
  output$cost_2 <-renderValueBox({
    valueBox(percent((values2() %>% pull(OwnCost)-base_values() %>% pull(OwnCost))/base_values() %>% pull(OwnCost)), "Annual Vehicle Cost", width=12, color="navy")
  })
  output$co2_2 <-renderValueBox({
    valueBox(percent((values2() %>% pull(DailyCO2e)-base_values() %>% pull(DailyCO2e))/base_values() %>% pull(DailyCO2e)), "Daily CO2 (kg/Day)", width=12, color="navy")
  })
  output$veh_trips_2 <-renderValueBox({
    valueBox(percent((values2() %>% pull(VehicleTrips)-base_values() %>% pull(VehicleTrips))/base_values() %>% pull(VehicleTrips)), "Daily Vehicle Trips", width=12, color="navy")
  })
  output$tran_trips_2 <-renderValueBox({
    valueBox(percent((values2() %>% pull(TransitTrips)-base_values() %>% pull(TransitTrips))/base_values() %>% pull(TransitTrips)), "Daily Transit Trips", width=12, color="navy")
  })
  # scenario 3
  values3<- reactive({
    data3 %>% filter(Azone %in%input$input_azone & 
                           HhSize %in%input$input_hh & 
                           composition %in%input$input_lifecycle & 
                           income_cat %in%input$input_income & 
                           Workers %in%input$input_workers & 
                           HouseType %in%input$input_house_type &
                           LocType %in%input$input_loc_type &
                           Vehicles %in%input$input_vehicles&
                           Drivers %in%input$input_drivers) %>% summarise(Dvmt=round(mean(Dvmt, na.rm=T),2),
                                                                        #  DailyGGE=round(mean(DailyGGE, na.rm=T),2),
                                                                          OwnCost=round(mean(OwnCost, na.rm=T),2),
                                                                          DailyCO2e=round(mean(DailyCO2e, na.rm=T),2),
                                                                          VehicleTrips=round(mean(VehicleTrips, na.rm=T),2),                                                                      TransitTrips=round(mean(TransitTrips, na.rm=T),2))
  })
  output$dvmt_3 <-renderValueBox({
    valueBox(percent((values3() %>% pull(Dvmt)-base_values() %>% pull(Dvmt))/base_values() %>% pull(Dvmt)), "Daily VMT", width=12, color="navy")
  })
  # output$gge_3 <-renderValueBox({
  #   valueBox(percent((values3() %>% pull(DailyGGE)-base_values() %>% pull(DailyGGE))/base_values() %>% pull(DailyGGE)), "Daily GHG", width=12, color="navy")
  # })
  output$cost_3 <-renderValueBox({
    valueBox(percent((values3() %>% pull(OwnCost)-base_values() %>% pull(OwnCost))/base_values() %>% pull(OwnCost)), "Annual Vehicle Cost", width=12, color="navy")
  })
  output$co2_3 <-renderValueBox({
    valueBox(percent((values3() %>% pull(DailyCO2e)-base_values() %>% pull(DailyCO2e))/base_values() %>% pull(DailyCO2e)), "Daily CO2 (kg/Day)", width=12, color="navy")
  })
  output$veh_trips_3 <-renderValueBox({
    valueBox(percent((values3() %>% pull(VehicleTrips)-base_values() %>% pull(VehicleTrips))/base_values() %>% pull(VehicleTrips)), "Daily Vehicle Trips", width=12, color="navy")
  })
  output$tran_trips_3 <-renderValueBox({
    valueBox(percent((values3() %>% pull(TransitTrips)-base_values() %>% pull(TransitTrips))/base_values() %>% pull(TransitTrips)), "Daily Transit Trips", width=12, color="navy")
  })
  # scenario 4
  # values4<- reactive({
  #   data4 %>% filter(Azone %in%input$input_azone & 
  #                          HhSize %in%input$input_hh & 
  #                          composition %in%input$input_lifecycle & 
  #                          income_cat %in%input$input_income & 
  #                          Workers %in%input$input_workers & 
  #                          HouseType %in%input$input_house_type &
  #                          LocType %in%input$input_loc_type &
  #                          Vehicles %in%input$input_vehicles&
  #                          Drivers %in%input$input_drivers) %>% summarise(Dvmt=round(mean(Dvmt, na.rm=T),2),
  #                                                                       #  DailyGGE=round(mean(DailyGGE, na.rm=T),2),
  #                                                                         OwnCost=round(mean(OwnCost, na.rm=T),2),
  #                                                                         DailyCO2e=round(mean(DailyCO2e, na.rm=T),2),
  #                                                                         VehicleTrips=round(mean(VehicleTrips, na.rm=T),2),                                                                      TransitTrips=round(mean(TransitTrips, na.rm=T),2))
  # })
  # output$dvmt_4 <-renderValueBox({
  #   valueBox(percent((values4() %>% pull(Dvmt)-base_values() %>% pull(Dvmt))/base_values() %>% pull(Dvmt)), "Daily VMT", width=12, color="navy")
  # })
  # output$gge_4 <-renderValueBox({
  #   valueBox(percent((values4() %>% pull(DailyGGE)-base_values() %>% pull(DailyGGE))/base_values() %>% pull(DailyGGE)), "Daily GHG", width=12, color="navy")
  # })
  # output$cost_4 <-renderValueBox({
  #   valueBox(percent((values4() %>% pull(OwnCost)-base_values() %>% pull(OwnCost))/base_values() %>% pull(OwnCost)), "Annual Vehicle Cost", width=12, color="navy")
  # })
  # output$co2_4 <-renderValueBox({
  #   valueBox(percent((values4() %>% pull(DailyCO2e)-base_values() %>% pull(DailyCO2e))/base_values() %>% pull(DailyCO2e)), "Daily CO2 (kg/Day)", width=12, color="navy")
  # })
  # output$veh_trips_4<-renderValueBox({
  #   valueBox(percent((values4() %>% pull(VehicleTrips)-base_values() %>% pull(VehicleTrips))/base_values() %>% pull(VehicleTrips)), "Daily Vehicle Trips", width=12, color="navy")
  # })
  # output$tran_trips_4 <-renderValueBox({
  #   valueBox(percent((values4() %>% pull(TransitTrips)-base_values() %>% pull(TransitTrips))/base_values() %>% pull(TransitTrips)), "Daily Transit Trips", width=12, color="navy")
  # })
  # scenario 5
  # output$dvmt_5 <-renderValueBox({
  #   valueBox(data5 %>% filter(#scenario%in%"Scenario 5",
  #                            Azone %in%input$input_azone & 
  #                              HhSize %in%input$input_hh& 
  #                              composition %in%input$input_lifecycle & 
  #                              income_cat %in%input$input_income & 
  #                              Workers %in%input$input_workers & 
  #                              HouseType %in%input$input_house_type &
  #                              LocType %in%input$input_loc_type &
  #                              Vehicles %in%input$input_vehicles&
  #                              Drivers %in%input$input_drivers) %>% summarise(Dvmt=round(mean(Dvmt, na.rm=T),0)) %>% pull(), "Daily VMT", width=12, color="navy")
  # })
  # output$veh_trips_5 <-renderValueBox({
  #   valueBox(data5 %>% filter(#scenario%in%"Scenario 5",
  #                            Azone %in%input$input_azone & 
  #                              HhSize %in%input$input_hh& 
  #                              composition %in%input$input_lifecycle & 
  #                              income_cat %in%input$input_income & 
  #                              Workers %in%input$input_workers & 
  #                              HouseType %in%input$input_house_type &
  #                              LocType %in%input$input_loc_type &
  #                              Vehicles %in%input$input_vehicles&
  #                              Drivers %in%input$input_drivers) %>% summarise(VehicleTrips=round(mean(VehicleTrips, na.rm=T),1)) %>% pull(), "Daily Vehicle Trips", width=12, color="navy")
  # })
  # output$gge_5 <-renderValueBox({
  #   valueBox(data5 %>% filter(#scenario%in%"Scenario 5",
  #                            Azone %in%input$input_azone & 
  #                              HhSize %in%input$input_hh& 
  #                              composition %in%input$input_lifecycle & 
  #                              income_cat %in%input$input_income & 
  #                              Workers %in%input$input_workers & 
  #                              HouseType %in%input$input_house_type &
  #                              LocType %in%input$input_loc_type &
  #                              Vehicles %in%input$input_vehicles&
  #                              Drivers %in%input$input_drivers) %>% summarise(DailyGGE=round(mean(DailyGGE, na.rm=T),2)) %>% pull(), "Daily Gasoline (gal)", width=12, color="navy")
  # })
  # output$cost_5 <-renderValueBox({
  #   valueBox(data5 %>% filter(#scenario%in%"Scenario 5",
  #                            Azone %in%input$input_azone & 
  #                              HhSize %in%input$input_hh& 
  #                              composition %in%input$input_lifecycle & 
  #                              income_cat %in%input$input_income & 
  #                              Workers %in%input$input_workers & 
  #                              HouseType %in%input$input_house_type &
  #                              LocType %in%input$input_loc_type &
  #                              Vehicles %in%input$input_vehicles&
  #                              Drivers %in%input$input_drivers) %>% summarise(OwnCost=dollar(round(mean(OwnCost, na.rm=T),0))) %>% pull(), "Annual Vehicle Cost", width=12, color="navy")
  # })
  # output$co2_5 <-renderValueBox({
  #   valueBox(data5 %>% filter(#scenario%in%"Scenario 5",
  #                            Azone %in%input$input_azone & 
  #                              HhSize %in%input$input_hh&
  #                              composition %in%input$input_lifecycle & 
  #                              income_cat %in%input$input_income & 
  #                              Workers %in%input$input_workers & 
  #                              HouseType %in%input$input_house_type &
  #                              LocType %in%input$input_loc_type &
  #                              Vehicles %in%input$input_vehicles&
  #                              Drivers %in%input$input_drivers) %>% summarise(DailyCO2e=round(mean(DailyCO2e, na.rm=T),2)) %>% pull(), "Daily CO2 (kg/Day)", width=12, color="navy")
  # })
  # output$tran_trips_5 <-renderValueBox({
  #   valueBox(data5 %>% filter(#scenario%in%"Scenario 5",
  #                            Azone %in%input$input_azone & 
  #                              HhSize %in%input$input_hh& 
  #                              composition %in%input$input_lifecycle & 
  #                              income_cat %in%input$input_income & 
  #                              Workers %in%input$input_workers & 
  #                              HouseType %in%input$input_house_type &
  #                              LocType %in%input$input_loc_type &
  #                              Vehicles %in%input$input_vehicles&
  #                              Drivers %in%input$input_drivers) %>% summarise(TransitTrips=round(mean(TransitTrips, na.rm=T),1)) %>% pull(), "Daily Transit Trips", width=12, color="navy")
  # })
  output$download_shp1 <- downloadHandler(
    filename <- function() {
      paste0(unique(base_map$map),".zip")
    },
    content = function(file) {
      withProgress(message = "Exporting Data", {
        incProgress(0.5)
        tmp.path <- dirname(file)
        name.base <- file.path(tmp.path, unique(base_map$map))
        name.glob <- paste0(name.base, ".*")
        name.shp  <- paste0(name.base, ".shp")
        name.zip  <- paste0(name.base, ".zip")
        if (length(Sys.glob(name.glob)) > 0) file.remove(Sys.glob(name.glob))
        sf::st_write(base_map, dsn = name.shp, ## layer = "shpExport",
                     driver = "ESRI Shapefile", quiet = TRUE)
        zip::zipr(zipfile = name.zip, files = Sys.glob(name.glob))
        req(file.copy(name.zip, file))
        if (length(Sys.glob(name.glob)) > 0) file.remove(Sys.glob(name.glob))
        incProgress(0.5)
      })
    }  
  )
  output$download_shp2 <- downloadHandler(
    filename <- function() {
      paste0(unique(low_vmt_map$map),".zip")
    },
    content = function(file) {
      withProgress(message = "Exporting Data", {
        incProgress(0.5)
        tmp.path <- dirname(file)
        name.base <- file.path(tmp.path, unique(low_vmt_map$map))
        name.glob <- paste0(name.base, ".*")
        name.shp  <- paste0(name.base, ".shp")
        name.zip  <- paste0(name.base, ".zip")
        if (length(Sys.glob(name.glob)) > 0) file.remove(Sys.glob(name.glob))
        sf::st_write(low_vmt_map, dsn = name.shp, ## layer = "shpExport",
                     driver = "ESRI Shapefile", quiet = TRUE)
        zip::zipr(zipfile = name.zip, files = Sys.glob(name.glob))
        req(file.copy(name.zip, file))
        if (length(Sys.glob(name.glob)) > 0) file.remove(Sys.glob(name.glob))
        incProgress(0.5)
      })
    }  
  )
  output$download_shp3 <- downloadHandler(
    filename <- function() {
      paste0(unique(low_ghg_map$map),".zip")
    },
    content = function(file) {
      withProgress(message = "Exporting Data", {
        incProgress(0.5)
        tmp.path <- dirname(file)
        name.base <- file.path(tmp.path, unique(low_ghg_map$map))
        name.glob <- paste0(name.base, ".*")
        name.shp  <- paste0(name.base, ".shp")
        name.zip  <- paste0(name.base, ".zip")
        if (length(Sys.glob(name.glob)) > 0) file.remove(Sys.glob(name.glob))
        sf::st_write(low_ghg_map, dsn = name.shp, ## layer = "shpExport",
                     driver = "ESRI Shapefile", quiet = TRUE)
        zip::zipr(zipfile = name.zip, files = Sys.glob(name.glob))
        req(file.copy(name.zip, file))
        if (length(Sys.glob(name.glob)) > 0) file.remove(Sys.glob(name.glob))
        incProgress(0.5)
      })
    }  
  )
  output$download_shp4 <- downloadHandler(
    filename <- function() {
      paste0(unique(low_ghg_map$map),".zip")
    },
    content = function(file) {
      withProgress(message = "Exporting Data", {
        incProgress(0.5)
        tmp.path <- dirname(file)
        name.base <- file.path(tmp.path, unique(low_ghg_map$map))
        name.glob <- paste0(name.base, ".*")
        name.shp  <- paste0(name.base, ".shp")
        name.zip  <- paste0(name.base, ".zip")
        if (length(Sys.glob(name.glob)) > 0) file.remove(Sys.glob(name.glob))
        sf::st_write(low_ghg_map, dsn = name.shp, ## layer = "shpExport",
                     driver = "ESRI Shapefile", quiet = TRUE)
        zip::zipr(zipfile = name.zip, files = Sys.glob(name.glob))
        req(file.copy(name.zip, file))
        if (length(Sys.glob(name.glob)) > 0) file.remove(Sys.glob(name.glob))
        incProgress(0.5)
      })
    }  
  )
  output$download_shp5 <- downloadHandler(
    filename <- function() {
      paste0(unique(lu2_map$map),".zip")
    },
    content = function(file) {
      withProgress(message = "Exporting Data", {
        incProgress(0.5)
        tmp.path <- dirname(file)
        name.base <- file.path(tmp.path, unique(lu2_map$map))
        name.glob <- paste0(name.base, ".*")
        name.shp  <- paste0(name.base, ".shp")
        name.zip  <- paste0(name.base, ".zip")
        if (length(Sys.glob(name.glob)) > 0) file.remove(Sys.glob(name.glob))
        sf::st_write(lu2_map, dsn = name.shp, ## layer = "shpExport",
                     driver = "ESRI Shapefile", quiet = TRUE)
        zip::zipr(zipfile = name.zip, files = Sys.glob(name.glob))
        req(file.copy(name.zip, file))
        if (length(Sys.glob(name.glob)) > 0) file.remove(Sys.glob(name.glob))
        incProgress(0.5)
      })
    }  
  )
}
shinyApp(ui, server)


# test<-read_delim("C:\\Users\\reid.haefer\\Downloads\\test.txt", delim=",")

