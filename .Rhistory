left_join(od_data, by= c("TAZ"="FromZoneNo")) %>%
filter(ToZoneNo==10) %>% View()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
glimpse(link)
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolygons(data=link,#layerId = ~Link, label = ~NO,
color="#048495",
group = "link") %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolylines(data=link,#layerId = ~Link, label = ~NO,
color="#048495",
group = "link") %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolylines(data=link,#layerId = ~Link, label = ~NO,
color="#048495",
group = "link",
weight=link$Tot_Flow) %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
link<-st_read("data/ModelRun_(2024-01-19)-18_28_44/Network","Network_link") %>% st_transform(crs=4326) %>% distinct(NO, .keep_all = TRUE) %>%
left_join(link_df, by="NO") %>%
mutate(flow_adjusted=sqrt(Tot_Flow))
glimpse(link)
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolylines(data=link,#layerId = ~Link, label = ~NO,
color="#048495",
group = "link",
weight=link$flow_adjusted) %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
link<-st_read("data/ModelRun_(2024-01-19)-18_28_44/Network","Network_link") %>% st_transform(crs=4326) %>% distinct(NO, .keep_all = TRUE) %>%
left_join(link_df, by="NO") %>%
mutate(flow_adjusted=sqrt(Tot_Flow)/10)
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolylines(data=link,#layerId = ~Link, label = ~NO,
color="#048495",
group = "link",
weight=link$flow_adjusted) %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
link<-st_read("data/ModelRun_(2024-01-19)-18_28_44/Network","Network_link") %>% st_transform(crs=4326) %>% distinct(NO, .keep_all = TRUE) %>%
left_join(link_df, by="NO") %>%
mutate(flow_adjusted=sqrt(Tot_Flow)/50)
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolylines(data=link,#layerId = ~Link, label = ~NO,
color="#048495",
group = "link",
weight=link$flow_adjusted) %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
link<-st_read("data/ModelRun_(2024-01-19)-18_28_44/Network","Network_link") %>% st_transform(crs=4326) %>% distinct(NO, .keep_all = TRUE) %>%
left_join(link_df, by="NO") %>%
mutate(flow_adjusted=sqrt(Tot_Flow)/20)
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolylines(data=link,#layerId = ~Link, label = ~NO,
color="#048495",
group = "link",
weight=link$flow_adjusted) %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
?addPolylines
runApp()
# Number of color classes
n_colors <- 5
# Find quantile breaks in Tot_Flow
quantile_breaks <- classIntervals(link$Tot_Flow, n = n_colors, style = "quantile")
library(shiny)
library(shinydashboard)
library(shinyjs)
library(arrow)
library(data.table)
library(tidyverse)
library(sf)
library(leaflet)
library(plotly)
library(DT)
library(shinycssloaders)
library(shinyWidgets)
library(tigris)
library(scales)
library(RColorBrewer)
library(formattable)
library(reactablefmtr)
library(htmltools)
library(ggalluvial)
library(classInt)
# Number of color classes
n_colors <- 5
# Find quantile breaks in Tot_Flow
quantile_breaks <- classIntervals(link$Tot_Flow, n = n_colors, style = "quantile")
# Assign colors to these breaks using a color palette
palette <- colorQuantile("YlOrRd", domain = link$Tot_Flow, n = n_colors)
# Number of color classes
n_colors <- 5
# Find quantile breaks in Tot_Flow
quantile_breaks <- classIntervals(link$Tot_Flow, n = n_colors, style = "quantile")
# Assign colors to these breaks using a color palette
palette <- colorQuantile("YlOrRd", domain = link$Tot_Flow, n = n_colors)
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolylines(data=link,#layerId = ~Link, label = ~NO,
color = ~palette(Tot_Flow),
group = "link",
weight=link$flow_adjusted,
fillOpacity = 1,
opacity = 1
) %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
?colorQuantile
runApp()
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolylines(data=link,
label = ~paste("Total Flow:", Tot_Flow),
color = ~palette(Tot_Flow),
group = "link",
weight=link$flow_adjusted,
fillOpacity = 1,
opacity = 1
) %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
runApp()
runApp()
glimpse(od_data)
trips <-fread("data/ModelRun_(2024-01-19)-18_28_44/Matrices/Model_Matrices.csv")
glimpse(trips)
trips <-fread("data/ModelRun_(2024-01-19)-18_28_44/Matrices/Model_Matrices.csv") %>%
group_by(FromZoneNo,ToZoneNo) %>%
summarize(total_trips=sum(c(DLY_LOV, DLY_HOV,DLY_Truck,DLY_LCV,DLY_Ext_Auto,DLY_Ext_Truck)),
AM=sum(c(AM_PER_LOV, AM_PER_HOV,AM_PER_Truck,AM_PER_LCV,AM_PER_Ext_Auto,AM_PER_Ext_Truck)),
MD=sum(c(MD_PER_LOV, MD_PER_HOV,MD_PER_Truck,MD_PER_LCV,MD_PER_Ext_Auto,MD_PER_Ext_Truck)),
PM=sum(c(PM_PER_LOV, PM_PER_HOV,PM_PER_Truck,PM_PER_LCV,PM_PER_Ext_Auto,PM_PER_Ext_Truck)),
NI=sum(c(NI_PER_LOV, NI_PER_HOV,NI_PER_Truck,NI_PER_LCV,NI_PER_Ext_Auto,NI_PER_Ext_Truck)))
glimpse(trips)
View(trips)
trips <-fread("data/ModelRun_(2024-01-19)-18_28_44/Matrices/Model_Matrices.csv") %>%
group_by(FromZoneNo,ToZoneNo) %>%
summarize(total_trips=sum(c(DLY_LOV, DLY_HOV,DLY_Truck,DLY_LCV,DLY_Ext_Auto,DLY_Ext_Truck)),
AM=sum(c(3* AM_PER_LOV, 3* AM_PER_HOV,3* AM_PER_Truck,3* AM_PER_LCV,3* AM_PER_Ext_Auto,3* AM_PER_Ext_Truck)),
MD=sum(c(6 *MD_PER_LOV, 6 *MD_PER_HOV,6 *MD_PER_Truck,6 *MD_PER_LCV,6 *MD_PER_Ext_Auto,6 *MD_PER_Ext_Truck)),
PM=sum(c(3* PM_PER_LOV, 3* PM_PER_HOV,3* PM_PER_Truck,3* PM_PER_LCV,3* PM_PER_Ext_Auto,3* PM_PER_Ext_Truck)),
NI=sum(c(6 *NI_PER_LOV, 6 *NI_PER_HOV,6 *NI_PER_Truck,6 *NI_PER_LCV,6 *NI_PER_Ext_Auto,6 *NI_PER_Ext_Truck)))
6.36+21.12+13.29+8.28
od_data <-fread("data/ModelRun_(2024-01-19)-18_28_44/Matrices/Model_Matrices.csv") %>%
group_by(FromZoneNo,ToZoneNo) %>%
summarize(total_trips=round(sum(c(DLY_LOV, DLY_HOV,DLY_Truck,DLY_LCV,DLY_Ext_Auto,DLY_Ext_Truck),0)),
AM=round(sum(c(3* AM_PER_LOV, 3* AM_PER_HOV,3* AM_PER_Truck,3* AM_PER_LCV,3* AM_PER_Ext_Auto,3* AM_PER_Ext_Truck),0)),
MD=round(sum(c(6 *MD_PER_LOV, 6 *MD_PER_HOV,6 *MD_PER_Truck,6 *MD_PER_LCV,6 *MD_PER_Ext_Auto,6 *MD_PER_Ext_Truck),0)),
PM=round(sum(c(3* PM_PER_LOV, 3* PM_PER_HOV,3* PM_PER_Truck,3* PM_PER_LCV,3* PM_PER_Ext_Auto,3* PM_PER_Ext_Truck),0)),
NI=round(sum(c(6 *NI_PER_LOV, 6 *NI_PER_HOV,6 *NI_PER_Truck,6 *NI_PER_LCV,6 *NI_PER_Ext_Auto,6 *NI_PER_Ext_Truck),0)))
View(od_data)
6+21+13+8
od_data <-fread("data/ModelRun_(2024-01-19)-18_28_44/Matrices/Model_Matrices.csv") %>%
group_by(FromZoneNo,ToZoneNo) %>%
summarize(total_trips=round(sum(c(DLY_LOV, DLY_HOV,DLY_Truck,DLY_LCV,DLY_Ext_Auto,DLY_Ext_Truck),0)),
AM=sum(c(3* AM_PER_LOV, 3* AM_PER_HOV,3* AM_PER_Truck,3* AM_PER_LCV,3* AM_PER_Ext_Auto,3* AM_PER_Ext_Truck)),
MD=sum(c(6 *MD_PER_LOV, 6 *MD_PER_HOV,6 *MD_PER_Truck,6 *MD_PER_LCV,6 *MD_PER_Ext_Auto,6 *MD_PER_Ext_Truck)),
PM=sum(c(3* PM_PER_LOV, 3* PM_PER_HOV,3* PM_PER_Truck,3* PM_PER_LCV,3* PM_PER_Ext_Auto,3* PM_PER_Ext_Truck)),
NI=sum(c(6 *NI_PER_LOV, 6 *NI_PER_HOV,6 *NI_PER_Truck,6 *NI_PER_LCV,6 *NI_PER_Ext_Auto,6 *NI_PER_Ext_Truck)))
6.36+21.12+13.29+8.28
glimpse(od_data)
od_data %>% filter(FromZoneNo == ToZoneNo)
od_data %>% filter(FromZoneNo != ToZoneNo) %>% View()
od_data %>% pivot_longer(cols=1:2)
od_data %>% pivot_longer(cols=1:2) %>% View()
od_data %>% filter(FromZoneNo == ToZoneNo) %>% pivot_longer(cols=1:2) %>% View()
od_data %>% filter(FromZoneNo != ToZoneNo) %>% pivot_longer(cols=1:2) %>% View()
od_data %>% filter(FromZoneNo != ToZoneNo) %>% pivot_longer(cols=1:2) %>% group_by(value) %>%
summarise(total_trips=sum(total_trips),
AM=sum(AM),
MD=sum(MD),
PM=sum(PM),
NI=sum(NI)) %>%
View()
od_data %>% filter(FromZoneNo == ToZoneNo) %>% View()
od_data %>% filter(FromZoneNo != ToZoneNo) %>% pivot_longer(cols=1:2) %>% group_by(value) %>%
summarise(total_trips=sum(total_trips),
AM=sum(AM),
MD=sum(MD),
PM=sum(PM),
NI=sum(NI)) %>%
View()
od_data %>% filter(FromZoneNo == ToZoneNo) %>% View()
two<-od_data %>% filter(FromZoneNo != ToZoneNo) %>% pivot_longer(cols=1:2) %>% group_by(value) %>%
summarise(total_trips=sum(total_trips),
AM=sum(AM),
MD=sum(MD),
PM=sum(PM),
NI=sum(NI))
View(two)
od_data %>% filter(FromZoneNo == ToZoneNo) %>% select(FromZoneNo) %>% rename(value=ToZoneNo) %>%View()
od_data %>% filter(FromZoneNo == ToZoneNo) %>% select(FromZoneNo) %>% rename(value=ToZoneNo) %>% View()
od_data %>% filter(FromZoneNo == ToZoneNo) %>% select(FromZoneNo) %>% rename(value=ToZoneNo)
od_data %>% filter(FromZoneNo == ToZoneNo) %>% select(-FromZoneNo) %>% rename(value=ToZoneNo) %>% View()
od_data %>% filter(FromZoneNo == ToZoneNo) %>% select(-FromZoneNo)
od_data %>% filter(FromZoneNo == ToZoneNo) %>% select(-FromZoneNo)
od_data %>% filter(FromZoneNo == ToZoneNo) %>% ungroup() %>% select(-FromZoneNo)
od_data %>% filter(FromZoneNo == ToZoneNo) %>% ungroup() %>% select(-FromZoneNo) %>% rename(value=ToZoneNo) %>% View()
## thematic data
bind_cols(
od_data %>% filter(FromZoneNo == ToZoneNo) %>% ungroup() %>% select(-FromZoneNo) %>% rename(value=ToZoneNo),
od_data %>% filter(FromZoneNo != ToZoneNo) %>% pivot_longer(cols=1:2) %>% group_by(value) %>%
summarise(total_trips=sum(total_trips),
AM=sum(AM),
MD=sum(MD),
PM=sum(PM),
NI=sum(NI))
)
## thematic data
bind_rows(
od_data %>% filter(FromZoneNo == ToZoneNo) %>% ungroup() %>% select(-FromZoneNo) %>% rename(value=ToZoneNo),
od_data %>% filter(FromZoneNo != ToZoneNo) %>% pivot_longer(cols=1:2) %>% group_by(value) %>%
summarise(total_trips=sum(total_trips),
AM=sum(AM),
MD=sum(MD),
PM=sum(PM),
NI=sum(NI))
)
## thematic data
bind_rows(
od_data %>% filter(FromZoneNo == ToZoneNo) %>% ungroup() %>% select(-FromZoneNo) %>% rename(value=ToZoneNo),
od_data %>% filter(FromZoneNo != ToZoneNo) %>% pivot_longer(cols=1:2) %>% group_by(value) %>%
summarise(total_trips=sum(total_trips),
AM=sum(AM),
MD=sum(MD),
PM=sum(PM),
NI=sum(NI))
) %>% group_by(value) %>%
summarise(total_trips=sum(total_trips),
AM=sum(AM),
MD=sum(MD),
PM=sum(PM),
NI=sum(NI)) %>% View()
## thematic data
theme_data<-bind_rows(
od_data %>% filter(FromZoneNo == ToZoneNo) %>% ungroup() %>% select(-FromZoneNo) %>% rename(value=ToZoneNo),
od_data %>% filter(FromZoneNo != ToZoneNo) %>% pivot_longer(cols=1:2) %>% group_by(value) %>%
summarise(total_trips=sum(total_trips),
AM=sum(AM),
MD=sum(MD),
PM=sum(PM),
NI=sum(NI))
) %>% group_by(value) %>%
summarise(total_trips=sum(total_trips),
AM=sum(AM),
MD=sum(MD),
PM=sum(PM),
NI=sum(NI)) %>% View()
## thematic data
theme_data<-bind_rows(
od_data %>% filter(FromZoneNo == ToZoneNo) %>% ungroup() %>% select(-FromZoneNo) %>% rename(value=ToZoneNo),
od_data %>% filter(FromZoneNo != ToZoneNo) %>% pivot_longer(cols=1:2) %>% group_by(value) %>%
summarise(total_trips=sum(total_trips),
AM=sum(AM),
MD=sum(MD),
PM=sum(PM),
NI=sum(NI))
) %>% group_by(value) %>%
summarise(total_trips=sum(total_trips),
AM=sum(AM),
MD=sum(MD),
PM=sum(PM),
NI=sum(NI)) %>% rename(TAZ=value)
glimpse(theme_data)
glimpse(taz)
theme_data %>% select(TAZ, total_trips)
theme_data %>% select(TAZ, total_trips) %>% rename(value=2)
runApp()
theme_data %>% select(TAZ, total_trips) %>% rename(value=2)
test<-theme_data %>% select(TAZ, total_trips) %>% rename(value=2)
glimpse(test)
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolygons(data=taz %>% left_join(test, by="TAZ"),#layerId = ~TAZ, label = ~TAZ,
fillColor = ~ colorQuantile(palette = 'YlGnBu', domain = unique(test()$value))(value),
group = "first_map") %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolygons(data=taz %>% left_join(test, by="TAZ"),#layerId = ~TAZ, label = ~TAZ,
fillColor = ~ colorQuantile(palette = 'YlGnBu', domain = unique(test$value))(value),
group = "first_map") %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
View(test)
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolygons(data=taz %>% left_join(test, by="TAZ"),#layerId = ~TAZ, label = ~TAZ,
fillColor = ~ colorQuantile(palette = 'YlGnBu', domain = unique(test$value))(value), color='white',
group = "first_map") %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolygons(data=taz %>% left_join(test, by="TAZ"),#layerId = ~TAZ, label = ~TAZ,
fillColor = ~ colorQuantile(palette = 'YlGnBu', domain = unique(test$value))(value), color='white',
fillOpacity = 1,
group = "first_map") %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolygons(data=taz %>% left_join(test, by="TAZ"),#layerId = ~TAZ, label = ~TAZ,
fillColor = ~ colorQuantile(palette = 'YlGnBu', domain = unique(test$value))(value), color='white',
fillOpacity = 1, weight=2,
group = "first_map") %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles(providers$CartoDB.Positron, group ="CartoDB.Positron") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
# setView(lng=-73.984213, lat=40.798932,zoom=8) %>%
addPolygons(data=taz %>% left_join(test, by="TAZ"),#layerId = ~TAZ, label = ~TAZ,
fillColor = ~ colorQuantile(palette = 'YlGnBu', domain = unique(test$value))(value), color='white',
fillOpacity = .7, weight=2,
group = "first_map") %>%
addLayersControl(baseGroups = c( "CartoDB.Positron", "TonerLite", "OSM"),
position = "topright",
options = layersControlOptions(collapOD = TRUE))
runApp()
runApp()
glimpse(theme_data)
runApp()
colnames(theme_data)
glimpse(theme_data)
theme_data %>% select(TAZ, total_trips) %>% pivot_longer(cols=2:6) %>% rename(value=2)
theme_data %>% pivot_longer(cols=2:6)
theme_data %>% pivot_longer(cols=2:6) filter(name=='AM') %>% select(-2)
theme_data %>% pivot_longer(cols=2:6) %>% filter(name=='AM') %>% select(-2)
runApp()
runApp()
?leafletOutput
?renderLeaflet
?addPolygons
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
getwd()
# Read 'import.R' file --------------
### Imports data from processing script and GIS data
source("prep.R")
link<-st_read("data/ModelRun_(2024-01-19)-18_28_44/Network","Network_link") %>% st_transform(crs=4326) %>% distinct(NO, .keep_all = TRUE) %>%
left_join(link_df, by="NO") %>%
mutate(flow_adjusted=sqrt(Tot_Flow)/20,
Tot_Flow_clean=prettyNum(round(Tot_Flow), big.mark=","))
## link data ##
link_df <-fread("data/ModelRun_(2024-01-19)-18_28_44/Network/LinkTable.csv") %>%
group_by(NO) %>%
summarise(Tot_Flow=sum(Tot_Flow))
link<-st_read("data/ModelRun_(2024-01-19)-18_28_44/Network","Network_link") %>% st_transform(crs=4326) %>% distinct(NO, .keep_all = TRUE) %>%
left_join(link_df, by="NO") %>%
mutate(flow_adjusted=sqrt(Tot_Flow)/20,
Tot_Flow_clean=prettyNum(round(Tot_Flow), big.mark=","))
View(link)
source("prep.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?selectInput
runApp()
glimpse(link_df)
link_df <-fread("data/ModelRun_(2024-01-19)-18_28_44/Network/LinkTable.csv")
glimpse(link_df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
theme_data %>% pivot_longer(cols=2:6) %>% filter(name=='AM') %>% select(-2)
glimpse(taz)
st_area(taz)
sf_use_s2(FALSE)
st_area(taz)
st_area(taz)
data.frame(area_m=st_area(taz))
data.frame(area_m=as.numeric(st_area(taz)))
taz<-st_read("data",'srtc_taz') %>% st_transform(crs=4326) %>% filter(!is.na(layer))
taz <- bind_cols(taz,data.frame(area_m=as.numeric(st_area(taz))))
glimpse(taz)
theme_data %>% pivot_longer(cols=2:6) %>% filter(name=='AM') %>% select(-2)
glimpse(theme_data)
taz_df <-taz %>% data.frame() %>% select(TAZ,area_m)
## thematic data
theme_data<-bind_rows(
od_data %>% filter(FromZoneNo == ToZoneNo) %>% ungroup() %>% select(-FromZoneNo) %>% rename(value=ToZoneNo),
od_data %>% filter(FromZoneNo != ToZoneNo) %>% pivot_longer(cols=1:2) %>% group_by(value) %>%
summarise(total_trips=sum(total_trips),
AM=sum(AM),
MD=sum(MD),
PM=sum(PM),
NI=sum(NI))
) %>% group_by(value) %>%
summarise(total_trips=sum(total_trips),
AM=sum(AM),
MD=sum(MD),
PM=sum(PM),
NI=sum(NI)) %>% rename(TAZ=value) %>%
left_join(taz_df, by="TAZ")
glimpse(theme_data)
theme_data %>% pivot_longer(cols=2:6) %>% filter(name=='AM') %>% select(-2)
theme_data %>% pivot_longer(cols=2:7) %>% filter(name=='AM') %>% select(-2)
theme_data %>% pivot_longer(cols=2:7) %>% filter(name=='AM')
theme_data %>% pivot_longer(cols=2:7)
theme_data %>% pivot_longer(cols=2:6)
theme_data %>% pivot_longer(cols=2:6) %>% filter(name=='AM') %>% mutate(trips_per_area=value/area_m)
theme_data %>% pivot_longer(cols=2:6) %>% filter(name=='AM') %>% mutate(trips_per_area=(value/area_m)*100)
theme_data %>% pivot_longer(cols=2:6) %>% filter(name=='AM') %>% mutate(trips_per_area=(value/area_m)*100) %>% View()
theme_data %>% pivot_longer(cols=2:6) %>% filter(name=='AM') %>% mutate(trips_per_area=(value/area_m)*1000) %>% View()
theme_data %>% pivot_longer(cols=2:6) %>% filter(name=='AM') %>% mutate(trips_per_area=(value/area_m)*10000) %>% View()
runApp()
runApp()
runApp()
runApp()
glimpse(taz)
runApp()
runApp()
runApp()
glimpse(taz)
runApp()
runApp()
runApp()
runApp()
